name: "Pull Request deploy"

on:
  pull_request:
    types: [labeled, opened, synchronize]

jobs:
  deploy:
    if: |
      (github.event.action == 'labeled' && github.event.label.name == ':rocket: deploy') ||
      (github.event.action != 'labeled' && contains(github.event.pull_request.labels.*.name, ':rocket: deploy'))
    runs-on: ubuntu-latest
    steps:
      - name: inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: set STAGE variable in environment for next steps
        run: echo "STAGE=pr-${{ github.event.number }}-${{ env.GITHUB_HEAD_REF_SLUG }}" >> $GITHUB_ENV

      - name: create a github deployment
        uses: bobheadxi/deployments@v0.5.2
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: ${{ env.STAGE }}
          ref: ${{ github.head_ref }}
          no_override: false
          transient: true

      - name: checkout the files
        uses: actions/checkout@v2

      - name: configure AWS credentials
        run: echo "pretend to log in to AWS"

      - name: deploy main app
        uses: bitovi/github-actions-deploy-eks-helm@v1.2.4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
          cluster-name: supercluster
          config-files: main.yaml
          chart-path: testapp/
          namespace: ${{ env.STAGE }}
          values: host=${{ env.STAGE }}.test.cbrachem.de
          name: main
      
      - name: deploy app A
        uses: bitovi/github-actions-deploy-eks-helm@v1.2.4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
          cluster-name: supercluster
          config-files: a.yaml
          chart-path: testapp/
          namespace: ${{ env.STAGE }}
          values: host=a.${{ env.STAGE }}.test.cbrachem.de
          name: app-a
        
        - name: deploy app B
        uses: bitovi/github-actions-deploy-eks-helm@v1.2.4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
          cluster-name: supercluster
          config-files: b.yaml
          chart-path: testapp/
          namespace: ${{ env.STAGE }}
          values: host=b.${{ env.STAGE }}.test.cbrachem.de
          name: app-b

      - name: update the github deployment status
        uses: bobheadxi/deployments@v0.5.2
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env_url: "https://my-test-env.example.com"
